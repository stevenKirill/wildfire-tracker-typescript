{"version":3,"sources":["components/Header/Header.tsx","pages/ListPage.tsx","redux/actions.ts","components/LocationMarker/LocationMarker.tsx","components/Map/GoogleMap.tsx","api/keys.ts","pages/MapPage.tsx","Routes.tsx","redux/reducers.tsx","redux/store.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Header/header.module.css","common.module.css","components/LocationMarker/locationmarker.module.css"],"names":["Header","className","classes","header","item","to","activeClassName","active","ListPage","fireEvents","useSelector","state","List","map","fire","ListItem","color","marginRight","ListItemText","title","Divider","LocationMarker","lat","lng","marker","Tooltip","GoogleMap","center","zoom","events","renderMarkers","ev","idx","categories","id","geometries","coordinates","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","MapPage","dispatch","useDispatch","loading","error","useEffect","a","type","fetch","res","json","data","console","log","payload","marginTop","CircularProgress","Routes","Fragment","path","exact","initialState","store","createStore","action","erro","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3e4b60e1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './header.module.css';\n\nconst Header: React.FC = () => {\n    return (\n        <div className={classes.header}>\n            <div className={classes.item}>\n                <NavLink to=\"/map\" activeClassName={classes.active}>Map</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to=\"/list\" activeClassName={classes.active}>List</NavLink>\n            </div>\n        </div>\n    );\n};\n\nexport default Header\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IInitialState } from '../redux/interfaces';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport classes from '../common.module.css';\n\nconst ListPage = () => {\n    const {  fireEvents} = useSelector((state: IInitialState) => {\n        const { fireEvents } = state;\n        return {\n            fireEvents\n        };\n    });\n    return (\n        <List>\n            {fireEvents.map(fire => {\n                return (\n                    <>\n                    <ListItem>\n                        <LocalFireDepartmentIcon color=\"error\" className={classes.marginRight}/>\n                        <ListItemText>{fire.title}</ListItemText>\n                    </ListItem>\n                    <Divider/>\n                    </>\n                )\n            })}\n        </List>\n    )\n}\n\nexport default ListPage\n","import { IEvent } from \"../interfaces/appInterfaces\";\nimport { Action } from \"./interfaces\";\n\nconst START_LOADING = (): Action<void> => {\n    return {\n        type: 'START_LOADING'\n    }\n}\n\nfunction ERROR(): Action<void> {\n    return {\n        type: 'ERROR'\n    }\n}\n\n// const ERROR = <IActionCreator>() => {\n//     return {\n//         type: 'ERROR'\n//     }\n// }\n\nexport const SAVE_DATA = (payload: IEvent[]): Action<IEvent[]> => {\n    return {\n        type: 'SAVE_DATA',\n        payload\n    }\n}\n\nexport const fetchData = () => {\n    return async (dispatch: any) => {\n        dispatch(START_LOADING());\n        try {\n            const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events');\n            const data = await res.json();\n            console.log(data,'=>> data');\n            const { events } = data;\n            dispatch(SAVE_DATA(events));\n        } catch (error) {\n            dispatch(ERROR());\n        }\n    }\n}","import React from 'react';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport classes from './locationmarker.module.css';\nimport Tooltip from '@mui/material/Tooltip';\n\ninterface IProps {\n    lat: number;\n    lng: number;\n    title: string;\n}\n\nconst LocationMarker: React.FC<IProps> = ({ lat, lng, title }) => {\n    return (\n        <div className={classes.marker}>\n            <Tooltip title={title}>\n                <LocalFireDepartmentIcon color=\"error\"/>\n            </Tooltip>\n        </div>\n    )\n}\n\nexport default LocationMarker\n","import React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { GOOGLE_MAPS_KEY } from '../../api/keys'\nimport { IEvent } from '../../interfaces/appInterfaces';\nimport LocationMarker from '../LocationMarker/LocationMarker';\n\ninterface IProps {\n    center?: {\n        lat: 40.730610,\n        lng: -73.935242\n    },\n    zoom?: 6,\n    events: IEvent[]\n};\n\nconst NATURAL_EVENT_WILDFIRE: number = 8;\n\nconst GoogleMap: React.FC<IProps> = ({ center, zoom, events = [] }) => {\n\n    const renderMarkers = events.map((ev,idx) => {\n        const { categories } = ev;\n        if(categories[0].id === NATURAL_EVENT_WILDFIRE) {\n            return (\n                <LocationMarker \n                    lat={ev.geometries[0].coordinates[1]}\n                    lng={ev.geometries[0].coordinates[0]}\n                    title={ev.title}\n                    key={idx}\n                />\n            )\n        };\n    });\n    return (\n        <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: GOOGLE_MAPS_KEY }}\n                defaultCenter={ center }\n                defaultZoom={ zoom }\n            >\n                {renderMarkers}\n            </GoogleMapReact>\n        </div>\n    );\n};\n\nGoogleMap.defaultProps = {\n    center: {\n        lat: 40.730610,\n        lng: -73.935242\n    },\n    zoom: 6\n}\n\nexport default GoogleMap;\n","export const NASA_KEY = 'ezhvFozRtEqcj7eR6QBnfmpJejGi9MQBAjZVZDpc';\nexport const GOOGLE_MAPS_KEY = `AIzaSyAHT6PJqMm2EBG8P0luYKJnw8Q4cXjqyvA`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchData } from '../redux/actions';\nimport { IInitialState } from '../redux/interfaces';\nimport { CircularProgress } from '@mui/material';\nimport GoogleMap from '../components/Map/GoogleMap';\n\nconst MapPage: React.FC = () => {\n    const dispatch = useDispatch();\n    const { loading, error, fireEvents} = useSelector((state: IInitialState) => {\n        const { loading, error, fireEvents } = state;\n        return {\n            loading,\n            error,\n            fireEvents\n        };\n    });\n\n    useEffect(() => {\n        dispatch(fetchData());\n    },[]);\n\n    const renderer = (): JSX.Element | undefined => {\n        if (loading) {\n            return <CircularProgress/>\n        } else if (!loading && error) {\n            return (\n                <div>Error</div>\n            )\n        } else if (!loading && fireEvents) {\n            return <GoogleMap events={fireEvents}/>\n        }\n    }\n\n    return (\n        <div style={{ marginTop: '10px' }}>\n            {renderer()}\n        </div>\n    )\n};\n\nexport default MapPage\n","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ListPage from './pages/ListPage';\nimport MapPage from './pages/MapPage';\n\nconst Routes: React.FC = () => {\n    return (\n        <React.Fragment>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <MapPage/>\n                </Route>\n                <Route path=\"/list\" exact>\n                    <ListPage/>\n                </Route>\n                <Redirect to=\"/\"/>\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nexport default Routes\n","import { IInitialState, Action } from './interfaces';\n\nconst initialState: IInitialState = {\n    fireEvents: [],\n    loading: false,\n    error: false,\n}\n\n\nexport const rootReducer = (state = initialState,action: Action<any>) => {\n    switch(action.type) {\n        case 'START_LOADING':\n            return {\n                ...state,\n                loading: true\n            }\n        case 'SAVE_DATA':\n            return {\n                ...state,\n                loading: false,\n                fireEvents: action.payload\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                erro: true,\n            }\n        default:\n            return state;\n    }\n};","import { createStore, applyMiddleware} from 'redux';\nimport { rootReducer } from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    rootReducer, applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Routes from './Routes';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <Routes/>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__HZ6Fg\",\"item\":\"header_item__30uy_\",\"active\":\"header_active__16lWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marginRight\":\"common_marginRight__1vMDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marker\":\"locationmarker_marker__2bv4h\"};"],"sourceRoot":""}